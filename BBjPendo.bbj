use ::WebKit/util/ClientUtil.bbj::ClientUtil

use java.util.HashMap

use com.google.gson.Gson

class public BBjPendo

    field private HashMap userInfo! = new HashMap()

    field private HashMap accountInfo! = new HashMap()

    field private BBjString apiKey!

    method public BBjPendo()
    methodend

    method public void setApiKey(BBjString apiKey!)
        if apiKey! = null() or apiKey! = "" then throw "Key can't be null or empty",785
        #apiKey! = apiKey!
    methodend

    method private BBjString buildPendoInitScript()
        declare BBjString script! 
        declare Gson gson!

        gson! = new Gson()
        
        script! = "pendo.initialize({ visitor: "
        
        json! = gson!.toJson(#userInfo!)
        
        script! = script! + json! + ","
        
        script! = script! + " account: "
        
        json! = gson!.toJson(#accountInfo!)
        
        script! = script! + json! + "});"
        
        methodret script!
    methodend
    
    method public void initPendo()
        declare BBjString script!
        declare BBjString pendo!

        if #apiKey! = null() or #apiKey!.isEmpty() then throw "No ApiKey found", 404
        
        pendo! = #readFile("BBjPendo/pendoScript.js")
        pendo! = pendo! + "('"+ #apiKey! +"');"
        script! = pendo!
        script! = script! + #buildPendoInitScript()

        ClientUtil.executeJavascript(script!)
    methodend
    
    method public void setUserInformation(BBjString visitorId$)
        #userInfo!.put("id",visitorId$)    
    methodend

    method public void setAccountInformation(BBjString accountId$)
        #accountInfo!.put("id", accountId$)
    methodend

    method public void setCustomAccountInfo(BBjString key!, Object value!)
        #accountInfo!.put(key!,value!)  
    methodend

    method public void setCustomUserInfo(BBjString key!, Object value!)
        #userInfo!.put(key!,value!) 
    methodend

    rem /**
    rem  * Read the content of the given file as a String.
    rem  *
    rem  * @param file! The file's path
    rem  *
    rem  * @return The file's content
    rem  */
    method protected BBjString readFile(BBjString file$)
        content$ = ""
        ch=unt
        open (ch)file$
        read record (ch,siz=5512000)content$
        close (ch)
        methodret content$
    methodend
classend
